{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","Components/FaceRecognition/FaceRecognition.js","Components/SignIn/SignIn.js","Components/Register/Register.js","App.js","serviceWorker.js","index.js","Components/Logo/brain.png"],"names":["Navigation","this","props","isSignedIn","style","display","justifyContent","onClick","onRouteChange","className","Component","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","type","onChange","onInputChange","onButtonClick","Rank","FaceRecognition","id","imageUrl","top","box","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","class","htmlFor","name","value","app","Clarifai","App","apiKey","ParticlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","console","log","target","input","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","alert","route","params","Register","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.36ff51e2.chunk.js","sourcesContent":["import React, { Component } from  'react';\n\nclass Navigation extends Component{\n    render(){\n        if (this.props.isSignedIn){\n            return (\n                <div>\n                    <nav style = {{display:'flex', justifyContent: 'flex-end'}}>\n                        <p onClick = {() => this.props.onRouteChange('signout')} className = 'f3 link dim black underline pa3 pointer'>Sign Out</p>\n                    </nav>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                    <nav style = {{display:'flex', justifyContent: 'flex-end'}}>\n                        <p onClick = {() => this.props.onRouteChange('signin')} className = 'f3 link dim black underline pa3 pointer'>Sign In</p>\n                        <p onClick = {() => this.props.onRouteChange('register')} className = 'f3 link dim black underline pa3 pointer'>Register</p>\n                    </nav>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Navigation;","import React, { Component } from  'react';\nimport Tilt from 'react-tilt'\nimport './Logo.css';\nimport brain from './brain.png';\nclass Logo extends Component{\n    render(){\n        return (\n            <div className = 'ma4 mt0'>\n                <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n                    <div className=\"Tilt-inner\"> \n                        <img src = {brain} alt = 'logo' /> \n                    </div>\n                </Tilt>\n            </div>\n        )\n    }\n}\n\nexport default Logo;","import React, { Component } from  'react';\nimport './ImageLinkForm.css';\n\nclass ImageLinkForm extends Component{\n    render(){\n        return (\n            <div className = 'ma4 mt0'>\n                <p className = 'f3'>\n                    {'This Magic Brain will detect faces in your pictures. Give it a try.'}\n                </p>\n                <div className = 'center'>\n                    <div className = 'form center pa4 br3 shadow-5'>\n                        <input className = 'f4 pa2 w-70 center' type = \"text\" onChange = {this.props.onInputChange}/>\n                        <button className = 'w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick = {this.props.onButtonClick}>Detect</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ImageLinkForm;","import React, { Component } from  'react';\n\nclass Rank extends Component{\n    render(){\n        return (\n            <div>\n                <div className = 'white f3'>\n                    {'Andrei, your current rank is...'}\n                </div>\n                <div className = 'white f1'>\n                    {'#5'}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Rank;","import React, { Component } from  'react';\nimport './FaceRecognition.css';\n\nclass FaceRecognition extends Component{\n    render(){\n        return (\n            <div className = 'center ma'>\n                <div className = 'absolute mt2'>\n                    <img id = 'inputImage' src = {this.props.imageUrl} alt = '' width = '500px' height = 'auto' />\n                    <div className = 'bounding-box' style = {{top: this.props.box.topRow, right: this.props.box.rightCol, bottom: this.props.box.bottomRow, left: this.props.box.leftCol }} ></div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default FaceRecognition;","import React, { Component } from 'react';\n\nclass SignIn extends Component{\n    render(){\n        return(\n            <div>\n                <article class=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                    <main class=\"pa4 black-80\">\n                    <div class=\"measure\">\n                        <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\n                        <legend class=\"f4 fw6 ph0 mh0\">Sign In</legend>\n                        <div class=\"mt3\">\n                            <label class=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n                        </div>\n                        <div class=\"mv3\">\n                            <label class=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input class=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n                        </div>\n                        </fieldset>\n                        <div class=\"\">\n                        <input onClick = {() => this.props.onRouteChange('home')} class=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n                        </div>\n                        <div class=\"lh-copy mt3\">\n                        <p onClick = {() => this.props.onRouteChange('register')} class=\"f6 link dim black db\">Register</p>\n                        </div>\n                    </div>\n                    </main>\n                </article>\n            </div>\n        );\n    }\n}\nexport default SignIn","import React, { Component } from 'react';\n\nclass SignIn extends Component{\n    render(){\n        return(\n            <div>\n                <article class=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                    <main class=\"pa4 black-80\">\n                    <div class=\"measure\">\n                        <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\n                        <legend class=\"f4 fw6 ph0 mh0\">Register</legend>\n                        <div class=\"mt3\">\n                            <label class=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                            <input class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\n                        </div>\n                        <div class=\"mt3\">\n                            <label class=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input class=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n                        </div>\n                        <div class=\"mv3\">\n                            <label class=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input class=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n                        </div>\n                        </fieldset>\n                        <div class=\"\">\n                        <input onClick = {() => this.props.onRouteChange('home')} class=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n                        </div>\n                    </div>\n                    </main>\n                </article>\n            </div>\n        );\n    }\n}\nexport default SignIn","import React, { Component } from 'react';\nimport Navigation from './Components/Navigation/Navigation';\nimport './App.css';\nimport Logo from './Components/Logo/Logo'\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport SignIn from './Components/SignIn/SignIn';\nimport Register from './Components/Register/Register'\nconst ApiKey = '7e89b68a3c6e400bb0b7d500f1f20252';\nconst app = new Clarifai.App({\n  apiKey: ApiKey\n});\nconst ParticlesOptions = {\n  particles: {\n    number:{\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800 \n      }\n    }\n  }\n};\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n     input : '',\n     imageUrl : '',\n     box: {},\n     route: 'signin',\n     isSignedIn: false,\n    }\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box : box});\n  }\n  onInputChange = (event) => {\n    console.log(event.target.value);\n    this.setState({input: event.target.value});\n  }\n  onButtonClick = (event) => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => alert(\"Error! \"+err));\n  }\n  onRouteChange = (value) => {\n    if (value === 'signout'){\n      this.setState({isSignedIn: false})\n    } else if (value === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: value});\n  }\n  render(){\n    return(\n      <div className = 'App'>\n        <Particles className = 'particles' params = {ParticlesOptions}/>\n        <Navigation onRouteChange = {this.onRouteChange} isSignedIn = {this.state.isSignedIn} />\n        { this.state.route === 'home'\n        ?<div>\n        <Logo />    \n        <Rank />\n        <ImageLinkForm onInputChange = {this.onInputChange} onButtonClick = {this.onButtonClick}/>\n        <FaceRecognition imageUrl = {this.state.imageUrl} box = {this.state.box}/>\n        </div>\n        :(\n          this.state.route === 'signin'\n          ?<SignIn onRouteChange = {this.onRouteChange}/>\n          :<Register onRouteChange = {this.onRouteChange}/>\n        )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.e772f35d.png\";"],"sourceRoot":""}